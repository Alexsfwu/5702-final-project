knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE)
library(dplyr)
library(corpus)
library(ggplot2)
library(magrittr)
library(forcats)
# Read data from csv file and set empty slots as NAs
job <- read.csv("NYC_jobs.csv")
job[job == ''] <- NA
library(dplyr)
library(corpus)
library(ggplot2)
library(magrittr)
library(forcats)
# Read data from csv file and set empty slots as NAs
job <- read.csv("NYC_jobs.csv")
job[job == ''] <- NA
category <- job %>%
select(Job.Category, Job.ID) %>%
mutate(Job.Category = as.character(Job.Category),
Job.Category = gsub(",|&","", Job.Category),
Job.Category = word(Job.Category, 1 , 4, sep = ' '),
Job.Category = trimws(Job.Category,"both")) %>%
as.data.frame() %>%
drop_na()%>%
group_by(Job.Category)%>%
mutate(Count = n()) %>%
rename(Category = Job.Category)
category <- job %>%
select(Job.Category, Job.ID) %>%
mutate(Job.Category = as.character(Job.Category),
Job.Category = gsub(",|&","", Job.Category),
Job.Category = word(Job.Category, 1 , 4, sep = ' '),
Job.Category = trimws(Job.Category,"both")) %>%
as.data.frame() %>%
drop_na()%>%
group_by(Job.Category)%>%
mutate(Count = n()) %>%
rename(Category = Job.Category)
install.packages("stringr")
category <- job %>%
select(Job.Category, Job.ID) %>%
mutate(Job.Category = as.character(Job.Category),
Job.Category = gsub(",|&","", Job.Category),
Job.Category = word(Job.Category, 1 , 4, sep = ' '),
Job.Category = trimws(Job.Category,"both")) %>%
as.data.frame() %>%
drop_na()%>%
group_by(Job.Category)%>%
mutate(Count = n()) %>%
rename(Category = Job.Category)
install.packages("tidyverse")
install.packages("tidyverse")
category <- job %>%
select(Job.Category, Job.ID) %>%
mutate(Job.Category = as.character(Job.Category),
Job.Category = gsub(",|&","", Job.Category),
Job.Category = word(Job.Category, 1 , 4, sep = ' '),
Job.Category = trimws(Job.Category,"both")) %>%
as.data.frame() %>%
drop_na()%>%
group_by(Job.Category)%>%
mutate(Count = n()) %>%
rename(Category = Job.Category)
library(stringr)
category <- job %>%
select(Job.Category, Job.ID) %>%
mutate(Job.Category = as.character(Job.Category),
Job.Category = gsub(",|&","", Job.Category),
Job.Category = word(Job.Category, 1 , 4, sep = ' '),
Job.Category = trimws(Job.Category,"both")) %>%
as.data.frame() %>%
drop_na()%>%
group_by(Job.Category)%>%
mutate(Count = n()) %>%
rename(Category = Job.Category)
library(tidyverse)
library(dplyr)
library(corpus)
library(ggplot2)
library(magrittr)
library(forcats)
# Read data from csv file and set empty slots as NAs
job <- read.csv("NYC_jobs.csv")
job[job == ''] <- NA
category <- job %>%
select(Job.Category, Job.ID) %>%
mutate(Job.Category = as.character(Job.Category),
Job.Category = gsub(",|&","", Job.Category),
Job.Category = word(Job.Category, 1 , 4, sep = ' '),
Job.Category = trimws(Job.Category,"both")) %>%
as.data.frame() %>%
drop_na()%>%
group_by(Job.Category)%>%
mutate(Count = n()) %>%
rename(Category = Job.Category)
library(tidyr)
install.packages("tidyr")
install.packages("tidyr")
library(tidyr)
category <- job %>%
select(Job.Category, Job.ID) %>%
mutate(Job.Category = as.character(Job.Category),
Job.Category = gsub(",|&","", Job.Category),
Job.Category = word(Job.Category, 1 , 4, sep = ' '),
Job.Category = trimws(Job.Category,"both")) %>%
as.data.frame() %>%
drop_na()%>%
group_by(Job.Category)%>%
mutate(Count = n()) %>%
rename(Category = Job.Category)
ggplot(category, aes(fct_relevel(fct_rev(fct_infreq(Category))))) +
geom_bar(color = "black", fill = "orange") +
ggtitle("Job Count by Category") +
labs(x = "Category", y = "Count") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_flip()
job <- job%>%
mutate(salary = Salary.Range.From+(Salary.Range.To-Salary.Range.From)/2)%>%
merge(.,categoryList, by = "Job.ID")
Daily = job[job$Salary.Frequency=="Daily",]
ggplot(data = Daily, aes(Daily$salary)) +
geom_histogram(bins = 40, color = "black", fill = "orange") +
ggtitle("Salary Distribution (Daily)") +
labs(x = "Salary Range", y = "Count") +
theme(plot.title = element_text(hjust = 0.5))
job <- job%>%
mutate(salary = Salary.Range.From+(Salary.Range.To-Salary.Range.From)/2)%>%
merge(.,categoryList, by = "Job.ID")
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE)
library(dplyr)
library(corpus)
library(ggplot2)
library(magrittr)
library(forcats)
library(tidyverse)
# Read data from csv file and set empty slots as NAs
job <- read.csv("NYC_jobs.csv")
job[job == ''] <- NA
library(dplyr)
library(corpus)
library(ggplot2)
library(magrittr)
library(forcats)
library(tidyverse)
# Read data from csv file and set empty slots as NAs
job <- read.csv("NYC_jobs.csv")
job[job == ''] <- NA
categoryList <- job %>%
select(Job.Category, Job.ID) %>%
mutate(Job.Category = as.character(Job.Category),
Job.Category = gsub(",|&","", Job.Category),
Job.Category = as.vector(text_sub(Job.Category, 1 , 3, )),
Job.Category = trimws(Job.Category,"both")) %>%
as.data.frame() %>%
#drop_na()%>%
group_by(Job.Category)%>%
mutate(Count = n()) %>%
rename(Category = Job.Category)
ggplot(categoryList, aes(fct_relevel(fct_rev(fct_infreq(fct_explicit_na(Category,'NA')))))) +
geom_bar(color = "black", fill = "orange") +
ggtitle("Job Count by Category") +
labs(x = "Category", y = "Count") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_flip()
job <- job%>%
mutate(salary = Salary.Range.From+(Salary.Range.To-Salary.Range.From)/2)%>%
merge(.,categoryList, by = "Job.ID")
Annual = job[job$Salary.Frequency=="Annual",]
ggplot(data = Annual, aes(Annual$salary)) +
geom_histogram(bins = 40, color = "black", fill = "orange") +
ggtitle("Salary Distribution (Annual)") +
labs(x = "Salary Range", y = "Count") +
theme(plot.title = element_text(hjust = 0.5))
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE)
library(dplyr)
library(corpus)
library(ggplot2)
library(magrittr)
library(forcats)
library(tidyverse)
# Read data from csv file and set empty slots as NAs
job <- read.csv("NYC_jobs.csv")
job[job == ''] <- NA
categoryList <- job %>%
select(Job.Category, Job.ID) %>%
mutate(Job.Category = as.character(Job.Category),
Job.Category = gsub(",|&","", Job.Category),
Job.Category = as.vector(text_sub(Job.Category, 1 , 3, )),
Job.Category = trimws(Job.Category,"both")) %>%
as.data.frame() %>%
#drop_na()%>%
group_by(Job.Category)%>%
mutate(Count = n()) %>%
rename(Category = Job.Category)
ggplot(categoryList, aes(fct_relevel(fct_rev(fct_infreq(fct_explicit_na(Category,'NA')))))) +
geom_bar(color = "black", fill = "orange") +
ggtitle("Job Count by Category") +
labs(x = "Category", y = "Count") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_flip()
job <- job%>%
mutate(salary = Salary.Range.From+(Salary.Range.To-Salary.Range.From)/2)%>%
merge(.,categoryList, by = "Job.ID")
Annual = job[job$Salary.Frequency=="Annual",]
ggplot(data = Annual, aes(Annual$salary)) +
geom_histogram(bins = 40, color = "black", fill = "orange") +
ggtitle("Salary Distribution (Annual)") +
labs(x = "Salary Range", y = "Count") +
theme(plot.title = element_text(hjust = 0.5))
Daily = job[job$Salary.Frequency=="Daily",]
ggplot(data = Daily, aes(Daily$salary)) +
geom_histogram(bins = 40, color = "black", fill = "orange") +
ggtitle("Salary Distribution (Daily)") +
labs(x = "Salary Range", y = "Count") +
theme(plot.title = element_text(hjust = 0.5))
Hourly = job[job$Salary.Frequency=="Hourly",]
ggplot(data = Hourly, aes(Hourly$salary)) +
geom_histogram(bins = 40, color = "black", fill = "orange") +
ggtitle("Salary Distribution (Hourly)") +
labs(x = "Salary Range", y = "Count") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(job, aes(x = Category, y = salary)) +
geom_boxplot(color = "black", fill = "orange") +
ggtitle("Distribution of Salaries w.r.t Different Categories") +
labs(x = "Salary", y = "Category") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_flip()
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE)
library(dplyr)
library(corpus)
library(ggplot2)
library(magrittr)
library(forcats)
library(tidyverse)
# Read data from csv file and set empty slots as NAs
job <- read.csv("NYC_jobs.csv")
job[job == ''] <- NA
library(dplyr)
library(corpus)
library(ggplot2)
library(magrittr)
library(forcats)
library(tidyverse)
# Read data from csv file and set empty slots as NAs
job <- read.csv("NYC_jobs.csv")
job[job == ''] <- NA
categoryList <- job %>%
select(Job.Category, Job.ID) %>%
mutate(Job.Category = as.character(Job.Category),
Job.Category = gsub(",|&","", Job.Category),
Job.Category = as.vector(text_sub(Job.Category, 1 , 3, )),
Job.Category = trimws(Job.Category,"both")) %>%
as.data.frame() %>%
#drop_na()%>%
group_by(Job.Category)%>%
mutate(Count = n()) %>%
rename(Category = Job.Category)
ggplot(categoryList, aes(fct_relevel(fct_rev(fct_infreq(fct_explicit_na(Category,'NA')))))) +
geom_bar(color = "black", fill = "orange") +
ggtitle("Job Count by Category") +
labs(x = "Category", y = "Count") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_flip()
job <- job%>%
mutate(salary = Salary.Range.From+(Salary.Range.To-Salary.Range.From)/2)%>%
merge(.,categoryList, by = "Job.ID")
Annual = job[job$Salary.Frequency=="Annual",]
ggplot(data = Annual, aes(Annual$salary)) +
geom_histogram(bins = 40, color = "black", fill = "orange") +
ggtitle("Salary Distribution (Annual)") +
labs(x = "Salary Range", y = "Count") +
theme(plot.title = element_text(hjust = 0.5))
Daily = job[job$Salary.Frequency=="Daily",]
ggplot(data = Daily, aes(Daily$salary)) +
geom_histogram(bins = 40, color = "black", fill = "orange") +
ggtitle("Salary Distribution (Daily)") +
labs(x = "Salary Range", y = "Count") +
theme(plot.title = element_text(hjust = 0.5))
Hourly = job[job$Salary.Frequency=="Hourly",]
ggplot(data = Hourly, aes(Hourly$salary)) +
geom_histogram(bins = 40, color = "black", fill = "orange") +
ggtitle("Salary Distribution (Hourly)") +
labs(x = "Salary Range", y = "Count") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(job, aes(x = Category, y = salary)) +
geom_boxplot(color = "black", fill = "orange") +
ggtitle("Distribution of Salaries w.r.t Different Categories") +
labs(x = "Salary", y = "Category") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_flip()
knitr::opts_chunk$set(warning = FALSE, message = FALSE, echo = TRUE)
library(dplyr)
library(corpus)
library(ggplot2)
library(magrittr)
library(forcats)
library(tidyverse)
# Read data from csv file and set empty slots as NAs
job <- read.csv("NYC_jobs.csv")
job[job == ''] <- NA
library(dplyr)
library(corpus)
library(ggplot2)
library(magrittr)
library(forcats)
library(tidyverse)
# Read data from csv file and set empty slots as NAs
job <- read.csv("NYC_jobs.csv")
job[job == ''] <- NA
categoryList <- job %>%
select(Job.Category, Job.ID) %>%
mutate(Job.Category = as.character(Job.Category),
Job.Category = gsub(",|&","", Job.Category),
Job.Category = as.vector(text_sub(Job.Category, 1 , 3, )),
Job.Category = trimws(Job.Category,"both")) %>%
as.data.frame() %>%
rename(Category = Job.Category)
ggplot(categoryList, aes(fct_relevel(fct_rev(fct_infreq(fct_explicit_na(Category,'NA')))))) +
geom_bar(color = "black", fill = "orange") +
ggtitle("Job Count by Category") +
labs(x = "Category", y = "Count") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_flip()
job <- job%>%
mutate(salary = Salary.Range.From+(Salary.Range.To-Salary.Range.From)/2)%>%
merge(.,categoryList, by = "Job.ID")
Annual = job[job$Salary.Frequency=="Annual",]
ggplot(data = Annual, aes(Annual$salary)) +
geom_histogram(bins = 40, color = "black", fill = "orange") +
ggtitle("Salary Distribution (Annual)") +
labs(x = "Salary Range", y = "Count") +
theme(plot.title = element_text(hjust = 0.5))
Daily = job[job$Salary.Frequency=="Daily",]
ggplot(data = Daily, aes(Daily$salary)) +
geom_histogram(bins = 40, color = "black", fill = "orange") +
ggtitle("Salary Distribution (Daily)") +
labs(x = "Salary Range", y = "Count") +
theme(plot.title = element_text(hjust = 0.5))
Hourly = job[job$Salary.Frequency=="Hourly",]
ggplot(data = Hourly, aes(Hourly$salary)) +
geom_histogram(bins = 40, color = "black", fill = "orange") +
ggtitle("Salary Distribution (Hourly)") +
labs(x = "Salary Range", y = "Count") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(job, aes(x = Category, y = salary)) +
geom_boxplot(color = "black", fill = "orange") +
ggtitle("Distribution of Salaries w.r.t Different Categories") +
labs(x = "Salary", y = "Category") +
theme(plot.title = element_text(hjust = 0.5)) +
coord_flip()
install.packages("tm")
